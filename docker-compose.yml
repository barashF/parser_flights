services:
  bars:
    container_name: parser
    build:
      context: .
    ports:
      - "${PORT}:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/{POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network


  db:
    image: postgres:latest
    container_name: flights_postgres
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - parser_flights_pgsql_db:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 10


  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: flights_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app_network


volumes:
  parser_flights_pgsql_db:
  pgadmin_data:


networks:
  app_network:
    driver: bridge
